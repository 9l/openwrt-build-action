#
# This is free software, lisence use MIT.
#
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# <https://github.com/P3TERX/Actions-OpenWrt>
#
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2020 9l
# <https://github.com/9l/openwrt-build-action>
#

name: openwrt-arm64-rpi4b

on:
  push:
    tags: R*-rpi4b

env:
  BUILD_NAME: openwrt-arm64-rpi4b
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: arm64-rpi4b.config
  SHOWSSR_SH: HELLOWORLD.sh
  CUSTOMIZE_SH: customize-rpi4b.sh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo swapoff /mnt/swapfile
          sudo rm -rf /mnt/swapfile /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d/* /usr/local/lib/android /opt/ghc
          sudo -E apt-get -y purge android* azure-cli dotnet* firefox ghc* google* hhvm llvm* mysql* openjdk* php* powershell texlive* zulu*
          sudo -E apt-get update
          sudo -E apt-get -y dist-upgrade
          sudo -E apt-get -y install antlr3 asciidoc binutils build-essential bzip2 curl gawk gettext git libncurses5-dev libuv1-dev patch python2.7 python3.6 unzip zlib1g-dev lib32gcc1 libc6-dev libc6-dev-i386 subversion flex node-uglify gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib linux-libc-dev swig wget
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

      - name: Clone source code
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

      - name: Update & Install feeds
        working-directory: ./openwrt
        run: |
          sh ../$SHOWSSR_SH
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configuration Customization - ${{ env.BUILD_NAME }}
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          sh ./$CUSTOMIZE_SH
          cd openwrt
          make defconfig

      - name: Download package
        working-directory: ./openwrt
        run: |
          make download -j$(nproc) V=s
          find dl -size -1024c -exec rm -f {} \;

      - name: Build firmware
        working-directory: ./openwrt
        run: |
          make -j$(nproc) V=s

      - name: Assemble artifact
        working-directory: ./openwrt
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find ./bin/targets/ -name "*ext4*.img.*" | xargs -i mv -f {} ./artifact/
          find ./bin/targets/ -name "*squashfs*.img.*" | xargs -i mv -f {} ./artifact/

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BUILD_NAME }}
          path: openwrt/artifact

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Create release and upload asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          assets=()
          for asset in ./$BUILD_NAME/*; do
            assets+=("-a" "$asset")
          done
          tag_name=${GITHUB_REF##*/}
          hub release create "${assets[@]}" -m "$BUILD_NAME ${tag_name%%-*}" "$tag_name"
